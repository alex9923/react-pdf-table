{"version":3,"file":"TableBody.js","sourceRoot":"","sources":["../src/TableBody.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAqD;AACrD,6BAA+B;AAC/B,iCAAmD;AAsBnD;IAA+B,6BAAsC;IAArE;;IAuBA,CAAC;IAtBG,0BAAM,GAAN;QAAA,iBAqBC;;QApBG,IAAM,QAAQ,GAAU,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAA,KAAiE,IAAA,gCAAwB,EAAC,IAAI,CAAC,KAAK,CAAC,EAAnG,iBAAiB,uBAAA,EAAE,mBAAmB,yBAAA,EAAE,kBAAkB,wBAAyC,CAAC;QAC5G,IAAM,QAAQ,GAAG,MAAA,IAAI,CAAC,KAAK,CAAC,IAAI,mCAAI,EAAE,CAAC;QAEvC,OAAO,CACH,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,QAAQ;;YAAK,OAAA,CAC/B,oBAAC,mBAAQ,eACD,KAAI,CAAC,KAAK,IACd,GAAG,EAAE,QAAQ,EACb,IAAI,EAAE,QAAQ,GAAG,CAAC,KAAK,CAAC,EACxB,IAAI,EAAE,IAAI,EACV,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,EACxC,kBAAkB,EAAE,kBAAkB,EACtC,gBAAgB,EAAE,MAAA,KAAI,CAAC,KAAK,CAAC,eAAe,mCAAI,KAAK,KAEpD,QAAQ,CACF,CACd,CAAA;SAAA,CAAC,CACL,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC,AAvBD,CAA+B,KAAK,CAAC,aAAa,GAuBjD;AAvBY,8BAAS","sourcesContent":["import { TableRow, TableRowProps } from \"./TableRow\";\r\nimport * as React from \"react\";\r\nimport { getDefaultBorderIncludes } from \"./Utils\";\r\n\r\nexport interface TableBodyProps extends TableRowProps {\r\n    /**\r\n     * The data associated with the table.\r\n     */\r\n    children: any;\r\n    data?: any[];\r\n    zebra?: boolean;\r\n}\r\n\r\n// This interface adds a flag to indicate if we should render the top border,\r\n// thus allowing us to render it in the event that no\r\n// header rows were present in the table.\r\ninterface InternalBodyProps extends TableBodyProps {\r\n    renderTopBorder?: boolean;\r\n    children: any;\r\n}\r\n\r\n/**\r\n * This component displays the data as {@see TableRow}s.\r\n */\r\nexport class TableBody extends React.PureComponent<InternalBodyProps> {\r\n    render() {\r\n        const rowCells: any[] = React.Children.toArray(this.props.children);\r\n        const { includeLeftBorder, includeBottomBorder, includeRightBorder } = getDefaultBorderIncludes(this.props);\r\n        const dataRows = this.props.data ?? [];\r\n\r\n        return (\r\n            (dataRows).map((data, rowIndex) => (\r\n                <TableRow\r\n                    {...this.props}\r\n                    key={rowIndex}\r\n                    even={rowIndex % 2 === 0}\r\n                    data={data}\r\n                    includeLeftBorder={includeLeftBorder}\r\n                    includeBottomBorder={includeBottomBorder}\r\n                    includeRightBorder={includeRightBorder}\r\n                    includeTopBorder={this.props.renderTopBorder ?? false}\r\n                >\r\n                    {rowCells}\r\n                </TableRow>\r\n            ))\r\n        );\r\n    }\r\n}\r\n"]}